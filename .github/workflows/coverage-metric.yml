name: Coverage Metric

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:cov

      # (Opcional, útil para depurar)
      - name: List coverage dir
        run: ls -la coverage || true

      # Publica la métrica en el Summary.
      # Usa coverage-summary.json si existe; si no, intenta con coverage-final.json.
      - name: Publish metric to summary
        shell: bash
        run: |
          FILE=""
          if [ -f coverage/coverage-summary.json ]; then
            FILE="coverage/coverage-summary.json"
          elif [ -f coverage/coverage-final.json ]; then
            FILE="coverage/coverage-final.json"
          fi

          if [ -n "$FILE" ]; then
            # Lee el % de líneas desde el JSON (funciona para summary y final)
            PCT=$(node -e "const s=require('./'+'$FILE');const pct=(s.total?.lines?.pct)||(Object.values(s)[0]?.lines?.pct)||0;console.log(pct)")
            echo "## Coverage-only" >> $GITHUB_STEP_SUMMARY
            echo "- Lines: ${PCT}%" >> $GITHUB_STEP_SUMMARY
          else
            echo "No coverage JSON found (coverage-summary.json or coverage-final.json not present)" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
